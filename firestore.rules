rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to get user data
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data
    }
    
    // Helper function to check if user is a designer
    function isDesigner() {
      return getUserData().role == 'designer'
    }
    
    // Helper function to check if user is a client
    function isClient() {
      return getUserData().role == 'client'
    }

    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId;
    }

    // Projects collection
    match /projects/{projectId} {
      allow read: if request.auth != null && 
        (isDesigner() || 
        (isClient() && resource.data.clientId == request.auth.uid));
      allow write: if request.auth != null && isDesigner();
    }

    // Clients collection
    match /clients/{clientId} {
      allow read, write: if request.auth != null && isDesigner();
    }

    // Templates collection
    match /questionnaireTemplates/{templateId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isDesigner();
    }
  }
} 